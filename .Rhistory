PLT.blup +
ALB.blup+ # +  ns(ALB.bi.s_slope,3) +
BIL.blup +
AFPRATIO.blup +
ASTALT.blup +
#  DCP +
# MELD.blup +
# APRI.blup +
#     FIBROISHAK+
# HAI +
cluster(sub.id.consec),  data = timedat)
summary(pc.cox)
load("../Data/timedat_trt_marker_withDCP.Rdata") #already loaded timedat (training data)
timedat_trt <- subset(timedat_trt, Yrrand_LROutcome > 0 )
timedat_trt.imp <- subset(timedat_trt.imp, Yrrand_LROutcome > 0 )
timedat_trt.imp$t.star = timedat_trt.imp$Yrrand_LROutcome
timedat_trt.imp$status = timedat_trt.imp$LiverRelatedOutcome
timedat.imp$t.star = timedat.imp$Yrrand_LROutcome
timedat.imp$status = timedat.imp$LiverRelatedOutcome
dc  = list(pred.time = 5, si = 2, ti = 7, thresh = .65)
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
sum(d.pred$hhat.inv.case)/sum(d.pred$hhat.inv)
mean(risk)
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
d.pred <- get.d.pred(dc, data.s, risk)
thresh =  dc$thresh#quantile(d.pred$risk, dc$thresh)
tpfp <- get.tpfp(d.pred)
risk.perc <- rank(d.pred$risk)/length(d.pred$risk)
sum(d.pred$hhat.inv.case)/sum(d.pred$hhat.inv)
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
dc
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
hhat.inv <- get.hhat.inv.t.star(dc, data.s)
tst <- get.censoring.weights(dc = dc, data = data.s, new.times = data.s$time, ix.ctrl = ix.ctrl)
hhat.inv[sort(data.s$time)]
cbind(hhat.inv[sort(data.s$time)], tst)
plot(hhat.inv[sort(data.s$time)], tst)
plot(hhat.inv[order(data.s$time)], tst)
order(data.s$time)
order(data.s$time, decreasing=FALSE)
plot(hhat.inv[order(data.s$time, decreasing = FALSE)], tst)
plot(hhat.inv[order(data.s$time, decreasing = FALSE, index.return=TRUE)], tst)
plot(hhat.inv[order(data.s$time, decreasing = FALSE, index.return=TRUE)]$x, tst)
plot(hhat.inv[order(data.s$time, decreasing = FALSE, index.return=TRUE)$x], tst)
plot(hhat.inv[sort(data.s$time, decreasing = FALSE, index.return=TRUE)$x], tst)
plot(hhat.inv[sort(data.s$time, decreasing = FALSE, index.return=TRUE)$ix], tst)
cbind(hhat.inv, tst)
head(hhat.inv, tst)
head(cbind(hhat.inv, tst))
data.s[3,]
dc$ti
max(tst)
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
hhat.inv <- get.hhat.inv.t.star(dc, data.s)
i = 3
ix.case[3]
ix.greater.times          <- cdf.cens$time >= t.star[i] ###
ix.greater.times
min.time.past.the.current <- min(cdf.cens$time[ix.greater.times])
ix <- cdf.cens$time == min.time.past.the.current
ix
min(cdf.cens$time[ix.greater.times])
t.star[i]
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
dc$ti
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
tst <- get.censoring.weights(dc = dc, data = data.s, new.times = data.s$time, ix.ctrl = ix.ctrl)
dc
dc$ti = 5
hhat.inv <- get.hhat.inv.t.star(dc, data.s)
head(hhat.inv)
head(tst)
dc
plot(tst, hhat.inv)
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
dc
hhat.inv <- get.hhat.inv.t.star(dc, data.s)
dc$ti = 5
dc
hhat.inv.2 <- get.hhat.inv.t.star(dc, data.s)
head(hhat.inv)
head(hhat.inv.2)
head(data.s)
tst <- get.censoring.weights(dc = dc, data = data.s, new.times = data.s$t.star, ix.ctrl = ix.ctrl)
head(tst, hhat.inv)
dc
dc$ti = 7
hhat.inv <- get.hhat.inv.t.star(dc, data.s)
tst <- get.censoring.weights(dc = dc, data = data.s, new.times = data.s$t.star, ix.ctrl = ix.ctrl)
head(tst)
head(tst, hhat.inv)
hhat.inv
head(cbind(hhat.inv, tst), 10)
head(cbind(hhat.inv, tst, data.s$time), 10)
head(cbind(hhat.inv, tst, data.s$time, ix.cens), 10)
head(cbind(hhat.inv, tst, data.s$time, ix.ctrt), 10)
head(cbind(hhat.inv, tst, data.s$time, ix.ctrl), 10)
tst <- get.censoring.weights(dc = dc, data = data.s, new.times = data.s$time, ix.ctrl = ix.ctrl)
head(cbind(hhat.inv, tst, data.s$time, ix.ctrl), 10)
dc
ix.case <- (data.s$time <= dc$ti) & (data.s$status == 1)
ix.ctrl <- (data.s$time > dc$ti)
ix.cens <- (data.s$time <= dc$ti) & (data.s$status == 0)
tst <- get.censoring.weights(dc = dc, data = data.s, new.times = data.s$time, ix.ctrl = ix.ctrl)
head(cbind(hhat.inv, tst, data.s$time, ix.ctrl), 10)
head(cbind(hhat.inv, tst, data.s$time, ix.ctrl, data.s$status), 10)
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
tst <- get.censoring.weights(dc = dc, data = data.s, new.times = data.s$time, ix.ctrl = ix.ctrl)
head(out)
head(out$x)
head(out$ix)
out$x[which(out$ix==3)]
head(data)
out$x[which(out$ix==3)]
head(ix.ctrl)
out$x[which(out$ix==9)]
head(data$time, 10)
head(new.times.case.ctrl, 10)
head(new.times.casee.ctrl.sorted.incr, 10)
head(new.times.case.ctrl.sorted.incr, 10)
tail(new.times.case.ctrl.sorted.incr, 10)
tail(new.times.case.ctrl.sorted.incr[out$ix], 10)
head(new.times.case.ctrl.sorted.incr[out$ix], 10)
head(cbind(new.times.case.ctrl.sorted.incr[out$ix], 10), new.times.case.ctrl)
head(cbind(new.times.case.ctrl.sorted.incr[out$ix], new.times.case.ctrl), 10)
x <- sample(1:10)
x
a <- sort(x, index.return = TRUE, decreasing = FALSE)
a$x
a$x[ix]
a$x[a$ix]
set.seed(1)
x <- sample(1:10)
x
a <- sort(x, index.return = TRUE, decreasing = FALSE)
a$x
a$x[a$ix]
x
a$x[order[x]]
order[x]
a$x[order(x)
]
a$ix
order(x)
a$x
order(x)
x
x <- x + .1
order(x)
x
rev(order(x))
a$x[rev(order(x))]
x
a$x[order(a$xi)]
a$x[order(a$ix)]
x
a$x
a <- sort(x, index.return = TRUE, decreasing = FALSE)
x
a <- sort(x, index.return = TRUE, decreasing = FALSE)
a$x
a$ix
x[a$ix]
a$x[a$ix]
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
hhat.inv <- get.hhat.inv.t.star(dc, data.s)
tst <- get.censoring.weights(dc = dc, data = data.s, new.times = data.s$time, ix.ctrl = ix.ctrl)
plot(tst, hhat.inv)
a$x[a$ix]
set.seed(1)
x <- sample(1:10) + .1
x
a <- sort(x, index.keep = TRUE, decreasing  = FALSE)
a <- sort(x, index.return = TRUE, decreasing  = FALSE)
a
x[a$ix]
a$x[a$ix]
a$x[order(a$ix)]
x
head(cbind(hhat.inv, tst, data.s$time, ix.ctrl, data.s$status), 10)
head(subset(cbind(hhat.inv, tst, data.s$time, data.s$status), ix.ctrl), 10)
plot(subset(cbind(hhat.inv, tst), ix.ctrl), 10)
plot(subset(cbind(hhat.inv, tst), ix.ctrl))
plot(subset(cbind(hhat.inv, tst), ix.case))
abline(0,1)
plot(subset(cbind(hhat.inv, tst), ix.cens))
sum(hhat.inv.case)/sum(hhat.inv)
tst <- get.censoring.weights(dc = dc, data = data.s, new.times = data.s$time, ix.ctrl = ix.ctrl)
tst
head(tst)
hhat.inv <- matrix(tst, ncol=1)
print(paste("Cases:", sum(ix.case), "Controls:", sum(ix.ctrl), "Censored:", sum(ix.cens)))
risk    <- risk[!ix.cens]
marker  <- data.s$marker[!ix.cens]
ix.case <- ix.case[!ix.cens]
ix.ctrl <- ix.ctrl[!ix.cens]
if(!is.null(hhat.inv)){
hhat.inv <- hhat.inv[!ix.cens]
}else{
hhat.inv <- rep(1, length(risk))
}
if(sum(diff(risk) > 0) != 0){
ix.sort     <- sort(risk, decreasing = T, index.return = T)$ix
risk        <- risk[ix.sort]
marker      <- marker[ix.sort]
ix.case     <- ix.case[ix.sort]
ix.ctrl     <- ix.ctrl[ix.sort]
hhat.inv    <- hhat.inv[ix.sort]
}
hhat.inv.case = hhat.inv[ix.case]
sum(hhat.inv.case)/hhat.inv
sum(hhat.inv.case)/sum(hhat.inv)
head(hhat.inv)
tst <- get.censoring.weights(dc = dc, data = data.s, new.times = data.s$time, ix.ctrl = ix.ctrl)
hhat.inv <- matrix(tst, ncol=1)
ix.case <- (data.s$time <= dc$ti) & (data.s$status == 1)
ix.ctrl <- (data.s$time > dc$ti)
ix.cens <- (data.s$time <= dc$ti) & (data.s$status == 0)
tst <- get.censoring.weights(dc = dc, data = data.s, new.times = data.s$time, ix.ctrl = ix.ctrl)
hhat.inv <- matrix(tst, ncol=1)
print(paste("Cases:", sum(ix.case), "Controls:", sum(ix.ctrl), "Censored:", sum(ix.cens)))
risk    <- risk[!ix.cens]
marker  <- data.s$marker[!ix.cens]
ix.case <- ix.case[!ix.cens]
ix.ctrl <- ix.ctrl[!ix.cens]
if(!is.null(hhat.inv)){
hhat.inv <- hhat.inv[!ix.cens]
}else{
hhat.inv <- rep(1, length(risk))
}
sum(diff(risk) > 0) != 0
sum(diff(risk) > 0)
risk
risk    <- risk[!ix.cens]
marker  <- data.s$marker[!ix.cens]
ix.case <- ix.case[!ix.cens]
ix.ctrl <- ix.ctrl[!ix.cens]
risk
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
dc  = list(pred.time = 5, si = 2, ti = 7, thresh = .65)
#dc  = list(pred.time = 1, si = 2, ti = 3, thresh = .2)
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
head(risk)
mean(risk)
hhat.inv.case = hhat.inv[ix.case]
hhat.inv.ctrl = hhat.inv[ix.ctrl]
sum(hhat.inv.case)/sum(hhat.inv)
sum(hhat.inv)
hhat.inv <- get.hhat.inv.t.star(dc, data.s)
sum(hhat.inv)
ix.case <- (data.s$time <= dc$ti) & (data.s$status == 1)
ix.ctrl <- (data.s$time > dc$ti)
ix.cens <- (data.s$time <= dc$ti) & (data.s$status == 0)
print(paste("Cases:", sum(ix.case), "Controls:", sum(ix.ctrl), "Censored:", sum(ix.cens)))
risk    <- risk[!ix.cens]
marker  <- data.s$marker[!ix.cens]
ix.case <- ix.case[!ix.cens]
ix.ctrl <- ix.ctrl[!ix.cens]
sum(diff(risk) > 0) != 0
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
ix.case <- (data.s$time <= dc$ti) & (data.s$status == 1)
hhat.inv <- get.hhat.inv.t.star(dc, data.s)
head(tst)
head(hhat.inv)
hhat.inv.case = hhat.inv[ix.case]
hhat.inv.ctrl = hhat.inv[ix.ctrl]
sum(hhat.inv.case)/sum(hhat.inv)
load("5yearstats.Rdata")
all.stats
set.seed(1)
x <- sample(1:10) + .1
x
a <- sort(x, keep.index  = TRUE, decreasing  = FALSE)
a
a <- sort(x, index.return  = TRUE, decreasing  = FALSE)
a$x
a$ix
a$x[a$ix]
x$a$ix
x$[a$ix]
x[a$ix]
a$x[order(a$ix)]
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
cox.stats
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
cox.stats
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
sum(d.pred$hhat.inv.case)
sum(d.pred$hhat.inv)
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
sum(d.pred$hhat.inv.case)
sum(d.pred$hhat.inv)
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
cox.stats
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
hhat.inv.old <- get.hhat.inv.t.star(dc, data.s)
plot(hhat.inv, hhat.inv.old)
ablin(0,1)
abline(0,1)
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
mean(risk)
plot(risk)
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
cox.stats
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
cox.stats <- calc.stats_cox(test.data = timedat_trt.imp, dc = dc, model.fit = pc.cox )
mean(risk)
mean(risk*hhat.inv)
mean(risk/hhat.inv)
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
source('Z:/Yingye/applied/HALT-C/Rscripts/stats-mm.r')
rm(list = ls())
setwd("~/GitHub/SurvTreatmentSelection")
source("functions.R")
source("functions.R")
mydat <- SIM.data.singleMarker(nn=250)
mydat <- SIM.data.singleMarker(nn=250)
log(12)
log(1)
mydat <- SIM.data.singleMarker(nn=250)
source("functions.R")
mydat <- SIM.data.singleMarker(nn=250)
Y <- rnorm(nn, mu, Sigma)
T <- rbinom(nn, prob = .5)
nn
T <- rbinom(nn, size = 1,prob = .5)
mu.i <- Y*b.y + b.t*T + b.yt*T*Y
mu.i
r.ti <- log(-log(runif(nn)))
ti <-  -mu.i + r.ti
ti <- exp(ti)/lam0
hist(ti)
#time.max is the followup time.
ci = rep(time.max, nn)
ci
if(cens.lam > 0){
ci = rexp(nn, rate = cens.lam)
}
cens.lam
ci = pmin(ci, time.max)
ci
mydat <- SIM.data.singleMarker(nn=250)
Y <- rnorm(nn, mu, Sigma)
T <- rbinom(nn, prob = .5)
mu.i <- Y*b.y + b.t*T + b.yt*T*Y
#true survival time
r.ti <- log(-log(runif(nn)))
ti <-  -mu.i + r.ti
ti <- exp(ti)/lam0
#time.max is the followup time.
ci = rep(time.max, nn)
if(cens.lam > 0){
ci = rexp(nn, rate = cens.lam)
}
ci = pmin(ci, time.max)
ci
source("functions.R")
source("functions.R")
mydat <- SIM.data.singleMarker(nn=250, cens.lam = 4)
source('~/GitHub/SurvTreatmentSelection/functions.R')
source("functions.R")
mydat <- SIM.data.singleMarker(nn=250, cens.lam = 4)
source('~/GitHub/SurvTreatmentSelection/functions.R')
mydat <- SIM.data.singleMarker(nn=250, cens.lam = 4)
head(Xi)
head(xi)
ti
ci
cens.lam
ci = rexp(nn, rate = cens.lam)
ci
source('~/GitHub/SurvTreatmentSelection/functions.R')
mydat <- SIM.data.singleMarker(nn=250, cens.lam = 4, time.max = 5)
mydat <- SIM.data.singleMarker(nn=250, cens.lam = 4, time.max = 5)
source('~/GitHub/SurvTreatmentSelection/functions.R')
mydat <- SIM.data.singleMarker(nn=250, cens.lam = 4, time.max = 5)
mydat <- SIM.data.singleMarker(nn=250, cens.lam = 4, time.max = 5)
source('~/GitHub/SurvTreatmentSelection/functions.R')
mydat <- SIM.data.singleMarker(nn=250, cens.lam = 4, time.max = 5)
head(mydat)
library(survival)
mydat <- SIM.data.singleMarker(nn=250, cens.lam = 4, time.max = 5)
fit <- survfit(Surv(xi, di)~T*Y, data = mydat)
fit <- survfit(Surv(xi, di)~T:Y, data = mydat)
fit <- survfit(Surv(xi, di)~T+ Y, data = mydat)
plot(fit)
fit <- survfit(Surv(xi, di)~T+ Y, data = mydat, type = "kaplan-meier")
plot(fit)
plot(fit)
mean(mydat$xi)
fit <- survfit(Surv(xi, di)~Y, data = mydat, type = "kaplan-meier")
plot(fit)
fit <- survfit(Surv(xi, di)~Y, data = mydat, type = "kaplan-meier")
plot(fit)
fit <- survfit(Surv(xi, di)~T, data = mydat, type = "kaplan-meier")
plot(fit)
fit <- survfit(Surv(xi, di)~1, data = mydat, type = "kaplan-meier")
plot(fit)
plot.new()
fit <- survfit(Surv(xi, di)~1, data = mydat, type = "kaplan-meier")
plot(fit)
mydat <- SIM.data.singleMarker(nn=250, cens.lam = 5, time.max = 8)
fit <- survfit(Surv(xi, di)~1, data = mydat, type = "kaplan-meier")
plot(fit)
mydat <- SIM.data.singleMarker(nn=250,b.t = log(1.2), b.y = log(1.8), b.ty = log(1.5), cens.lam = 5, time.max = 8)
mydat <- SIM.data.singleMarker(nn=250,b.t = log(1.2), b.y = log(1.8), b.yt = log(1.5), cens.lam = 5, time.max = 8)
fit <- survfit(Surv(xi, di)~1, data = mydat, type = "kaplan-meier")
plot(fit)
mydat <- SIM.data.singleMarker(nn=250,
b.t = log(1.2),
b.y = log(.8),
b.yt = log(1.5),
cens.lam = 5, time.max = 8)
fit <- survfit(Surv(xi, di)~1, data = mydat, type = "kaplan-meier")
plot(fit)
mydat <- SIM.data.singleMarker(nn=250,
b.t = log(4),
b.y = log(3),
b.yt = log(1.5),
cens.lam = 5, time.max = 8)
fit <- survfit(Surv(xi, di)~1, data = mydat, type = "kaplan-meier")
plot(fit)
mydat <- SIM.data.singleMarker(nn=250,
b.t = log(4),
b.y = log(3),
b.yt = log(1.5),
cens.lam = 10, time.max = 8)
fit <- survfit(Surv(xi, di)~1, data = mydat, type = "kaplan-meier")
plot(fit)
hist(mydat$xi)
mydat <- SIM.data.singleMarker(nn=250,
b.t = log(4),
b.y = log(3),
b.yt = log(1.5),
cens.lam = .5, time.max = 8)
fit <- survfit(Surv(xi, di)~1, data = mydat, type = "kaplan-meier")
plot(fit)
table(mydat$di)
table(mydat$di)/250
mydat <- SIM.data.singleMarker(nn=250,
b.t = log(4),
b.y = log(3),
b.yt = log(1.5),
cens.lam = .25, time.max = 8)
table(mydat$di)/250
mydat <- SIM.data.singleMarker(nn=250,
b.t = log(4),
b.y = log(3),
b.yt = log(1.5),
cens.lam = .2, time.max = 8)
table(mydat$di)/250
fit <- survfit(Surv(xi, di)~1, data = mydat, type = "kaplan-meier")
plot(fit)
mydat <- SIM.data.singleMarker(nn=250,
b.t = log(4),
b.y = log(3),
b.yt = log(1.5),
cens.lam = .05, time.max = 8)
table(mydat$di)/250
fit <- survfit(Surv(xi, di)~1, data = mydat, type = "kaplan-meier")
plot(fit)
fit <- survfit(Surv(xi, di)~T, data = mydat, type = "kaplan-meier")
plot(fit)
S <- Surv(xi, di)
S <- Surv(xi, di, data = mydat)
summary(fit)
fit <- survfit(Surv(xi, di)~1, data = mydat, type = "kaplan-meier")
plot(fit)
summary(fit)
coxfit <- coxph(Surv(xi, di) ~T*Y, data = mydat)
summary(coxfit)
?survfit
coxph
mycox
coxfit
names(coxfit)
coxfit$formula
predict(coxfit)
predict(coxfit, "risk")
predict(coxfit, terms"risk")
predict(coxfit, terms = "risk")
?predict.coxfit
?predict.coxph
predict(coxfit, type = "risk")
predict(coxfit, type = "expected")
hist(predict(coxfit, type = "expected"))
hist(predict(coxfit, type = "expected")~mydat$T)
boxplot(predict(coxfit, type = "expected")~mydat$T)
source('~/GitHub/SurvTreatmentSelection/functions.R')
source('~/GitHub/SurvTreatmentSelection/functions.R')
